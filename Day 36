You are given an m x n integer matrix matrix with the following two properties:
Each row is sorted in non-decreasing order.
The first integer of each row is greater than the last integer of the previous row.
Given an integer target, return true if target is in matrix or false otherwise.

Answer:-


bool searchMatrix(vector<vector<int>>& matrix, int target) {
    if (matrix.empty() || matrix[0].empty())
        return false;

    int m = matrix.size();        // number of rows
    int n = matrix[0].size();     // number of columns

    int low  = 0;
    int high = m * n - 1;

    while (low <= high) {
        int mid = low + (high - low) / 2;
        int row = mid / n;        // which row
        int col = mid % n;        // which column
        int val = matrix[row][col];

        if (val == target) {
            return true;          
        } 
        else if (val < target) {
            low = mid + 1;       
        } 
        else {
            high = mid - 1;   
        }
    }

    return false;  
}
