Given a 0-indexed integer array nums of size n, find the maximum difference between nums[i] and nums[j] (i.e., nums[j] - nums[i]), such that 0 <= i < j < n and nums[i] < nums[j].
Return the maximum difference. If no such i and j exists, return -1.


Answer:-

      int maximumDifference(vector<int>& nums) {
        int n = nums.size();
        int small = nums[0];
        int large = -1;
        for(int i = 1; i<n; i++){
            if(nums[i] > small){
                int diff = nums[i] - small;
                if(diff > large){
                    large = diff;
                }
            }
            else{
                small = nums[i];
            }
        }
        return large;
        
    }

  
