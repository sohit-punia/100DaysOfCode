Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

Answer:- 

int reverse(int x) {
    int sum = 0;

    while (x != 0) {
        int digit = x % 10;
        x = x / 10;
        // Check for overflow before multiplying or adding
        if (sum > INT_MAX / 10 || (sum == INT_MAX / 10 && digit > 7)) 
        return 0;
        if (sum < INT_MIN / 10 || (sum == INT_MIN / 10 && digit < -8)) 
        return 0;

        sum = sum * 10 + digit;
    }
    return sum;
}
